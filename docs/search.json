[
  {
    "objectID": "pages/timeline.html#top-section",
    "href": "pages/timeline.html#top-section",
    "title": "Timeline",
    "section": "Top section",
    "text": "Top section\nUt eget lorem et odio facilisis placerat. Nam ac est elementum, ornare enim sit amet, aliquam magna. Morbi varius neque ante, non tristique velit pulvinar at. Praesent sit amet velit metus.\nAliquam condimentum aliquet sem, id vestibulum ante faucibus eu. Fusce vestibulum tellus ac luctus feugiat. Fusce semper venenatis dui, in porta urna cursus sit amet.",
    "crumbs": [
      "About",
      "Pages",
      "Timeline"
    ]
  },
  {
    "objectID": "pages/service.html#section",
    "href": "pages/service.html#section",
    "title": "Service",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Service"
    ]
  },
  {
    "objectID": "pages/projects.html#section",
    "href": "pages/projects.html#section",
    "title": "Projects",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Projects"
    ]
  },
  {
    "objectID": "pages/masters-degree.html#section",
    "href": "pages/masters-degree.html#section",
    "title": "Master’s Research",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Master's Research"
    ]
  },
  {
    "objectID": "pages/grants-awards.html#section",
    "href": "pages/grants-awards.html#section",
    "title": "Grants & Awards",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Grants & Awards"
    ]
  },
  {
    "objectID": "pages/education.html#section",
    "href": "pages/education.html#section",
    "title": "Education",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Education"
    ]
  },
  {
    "objectID": "pages/collaborators.html#section",
    "href": "pages/collaborators.html#section",
    "title": "Collaborators",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Collaborators"
    ]
  },
  {
    "objectID": "pages/all-styles.html#h2-text",
    "href": "pages/all-styles.html#h2-text",
    "title": "Dr Tormey Reimer",
    "section": "H2 Text",
    "text": "H2 Text\n\nH3 Text\n\nH4 Text\n\nH5 Text\n\nH6 Text\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla dignissim ex sit amet augue consequat, vel gravida purus ullamcorper. Etiam interdum metus in tincidunt elementum. Praesent placerat elit at eleifend eleifend. Vivamus consequat tempus sollicitudin. Pellentesque condimentum libero vel finibus pretium.\nLink styling\nPrimary\nSecondary\nAccent1\nAccent2\nLight\nDark\n\n# This is what code comments look like!\nprint(\"This is what code looks like!\")\n\n[1] \"This is what code looks like!\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTitle {.card-title}\n\nSome quick example text to build on the card title and make up the bulk of the card’s content.\n\nRead more\n\n\n\n\n\n\n\nTitle {.card-title}\n\nSome quick example text to build on the card title and make up the bulk of the card’s content.\n\nRead more\n\n\n\n\n\n\n\nTitle {.card-title}\n\nSome quick example text to build on the card title and make up the bulk of the card’s content.\n\nRead more",
    "crumbs": [
      "About",
      "Pages",
      "Dr Tormey Reimer"
    ]
  },
  {
    "objectID": "index.html#current-project",
    "href": "index.html#current-project",
    "title": "Dr Tormey Reimer",
    "section": "Current project",
    "text": "Current project\n\n\n\n\n\nThis website\nI know I’m supposed to be a scientist, but I also designed and built this whole website. And the best part? It was all done in R! Contact me if you want to know how you can move even more of your life into RStudio.\n\nMore projects"
  },
  {
    "objectID": "index.html#recent-publications",
    "href": "index.html#recent-publications",
    "title": "Dr Tormey Reimer",
    "section": "Recent publications",
    "text": "Recent publications\n\n\n\n\n\n\n\nHigh prevalence of vaterite in sagittal otoliths causes hearing impairment in farmed fish\nTormey Reimer, Tim Dempster, Fletcher Warren-Myers, Arne J. Jensen, Stephen E. Swearer\nScientific Reports, 2016\n\n\nThe rapid growth of aquaculture raises questions about the welfare status of mass-produced species. Sagittal otoliths are primary hearing structures in the inner ear of all teleost (bony) fishes and are normally composed of aragonite, though abnormal vaterite replacement is sometimes seen in the wild. We provide the first widespread evaluation of the prevalence of vaterite in otoliths, showing that farmed fish have levels of vaterite replacement over 10 times… Read more\n\n\n\n\n\n\n\nRapid growth causes abnormal vaterite formation in farmed fish otoliths\nTormey Reimer, Tim Dempster, Anna Wargelius, Per Gunnar Fjelldal, Tom Hansen, Kevin A. Glover, Monica F. Solberg, Stephen E. Swearer\nJournal of Evolutionary Biology, 2017\n\n\nSagittal otoliths are essential components of the sensory organs that enable all teleost fish to hear and maintain balance, and are primarily composed of calcium carbonate. A deformity, where aragonite (the normal crystal form) is replaced with vaterite, was first noted over 50 years ago but its underlying cause is unresolved. We evaluated the prevalence of vateritic otoliths from two captive rearing studies which suggested that fast growth, due to environmental… Read more\n\n\n\nSee all publications"
  },
  {
    "objectID": "index.html#follow-me",
    "href": "index.html#follow-me",
    "title": "Dr Tormey Reimer",
    "section": "Follow me",
    "text": "Follow me"
  },
  {
    "objectID": "index.html#coming-soon---my-blog",
    "href": "index.html#coming-soon---my-blog",
    "title": "Dr Tormey Reimer",
    "section": "Coming soon - my blog!",
    "text": "Coming soon - my blog!\n\n\n\n\n\nTitle\n\n\nSome quick example text to build on the card title and make up the bulk of the card’s content.\n\nRead more"
  },
  {
    "objectID": "index.html#get-in-touch",
    "href": "index.html#get-in-touch",
    "title": "Dr Tormey Reimer",
    "section": "Get in touch",
    "text": "Get in touch\n\n\n\n\n\n\n\n\n\nI’m currently working and responding to emails, messages, heartfelt letters, and good vibes. Feel free to reach out!\n\nContact me"
  },
  {
    "objectID": "blog_posts/example-blog-post.html",
    "href": "blog_posts/example-blog-post.html",
    "title": "Laying out figures with ggplot2",
    "section": "",
    "text": "Previously was using a combination of R, Powerpoint, and Latex to lay out figures.\nHowever, it was a very finicking process. If I’m going to be using Quarto/R for most things would be nice to do things all in one place.\nI really want to enable other students/academics to do things without reinventing the wheel.\n\n\nI like to use pacman (the package manager) because its function p_load acts like library() if the package is already installed and install.packages() if it isn’t. You can also pass all your package names to it as a single vector.\n\ninstall.packages(\"pacman\", repos=\"https://cran.r-project.org\", update = TRUE)\n\n# Basic plotting packages\npacman::p_load(\"ggplot2\", update = TRUE)\n\n# All the packages we need for laying out plots\npacman::p_load(\"grid\", \"gridExtra\", \"gtable\", \"cowplot\", \"multipanelfigure\", \"egg\", \"patchwork\", update = TRUE)\n\n# Extra stuff\npacman::p_load(\"ggpubr\", \"ggplotify\", \"tidyverse\", update = TRUE)\n\nSo these are the packages I want to compare. A lot of the inspiration for this work came from the egg vignettes (here and here), so make sure to check those out if you want further information.\n\n\n\nPackage\nVersion\nFunction(s)\nCompatible with ggsave()\nAlignment\n\n\n\n\nr cookbook (grid)\n4.3.0\nmultiplot\nno\nno\n\n\ngridExtra\n2.3\ngrid.arrange\nyes\nno\n\n\ngtable\n0.3.4\nmulti_panel_figure\nyes\nyes\n\n\ncowplot\n1.1.3\nplot_grid\nyes*\nyes*\n\n\nmultipanelfigure\n2.1.5\nmulti_panel_figure\nyes\nyes\n\n\negg\n0.4.5\nggarrange\nyes\nyes\n\n\npatchwork\n1.2.0\nplot_layout\nyes\nyes\n\n\n\n\n\n\nFirst I’m going to set up a dummy plot that will act as our tester going forward. I’m deliberately going to make it pretty complex to make sure I can demonstrate all the features we might want. I’ll be using data from the Bureau of Meteorology that I downloaded and cleaned up. The data I used is available here, and if you want to generate a similar dataset the code I used is here.\n\np.temp.9am = \n  ggplot(data = subset(weather.times, Time == \"Morning\"), \n         aes(x = Date, y = Temp.C, color = WindDir, shape = Time)) +\n  geom_point() + \n  scale_x_date(name = \"Month\", date_labels = \"%b\") +\n  theme_classic() + theme(legend.position = \"none\")\n\np.temp.3pm = \n  ggplot(data = subset(weather.times, Time == \"Morning\"), \n         aes(x = Date, y = Temp.C, color = WindDir, shape = Time)) +\n  geom_point() + \n  scale_x_date(name = \"Month\", date_labels = \"%b\") +\n  theme_classic() + theme(legend.position = \"none\")\n\n\n\n\nLaying two plots out, side by side, is easy with basically any of these packages. The most basic way is probably with the confusingly named custom function multiplot, which is built in base packages and defined in R Cookbook.\n\nmultiplot(p.temp.9am, p.temp.3pm, cols = 2)\n\n\n\n\n\n\n\n\nYou can also achieve the same thing with functions already built into the packages gridExtra, ggpubr and egg, which are built on top of the basic grid package:\n\n\n\n\n\ngridExtra::grid.arrange(\n  p.temp.9am, p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nggpubr::ggarrange(\n  p.temp.9am, p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\negg::ggarrange(\n  p.temp.9am, p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\nHowever, have a look at the figures above. Doesn’t it bother you that the axis titles, labels and tick-marks are repeated over multiple figures? It bothers me. It especially bothers me when I’m trying to squeeze a lot of information into one page. Repeated information isn’t just redundant, it’s actively detrimental to your audience’s understanding of your data. Personally, if I was going to plot those two figures together in a paper, I would remove their common axis (y if they’re side-by-side, x if they’re stacked).\n\n\n\nThe simplest way to do achieve this is to remove the offending elements from the plots themselves. I like to do this with theme environment shortcuts, which take advantage of ggplot2’s modular structure and can make your code a lot less verbose. For example:\n\nno.x = theme(axis.title.x = element_blank(), axis.text.x = element_blank())\nno.y = theme(axis.title.y = element_blank(), axis.text.y = element_blank())\n\nYou can then plot your figures much more neatly, and you’ll get exactly the same results using gridExtra::grid.arrange and ggpubr::ggarrange. However, you’ll get a different result when you use egg::ggarrange, and in fact egg::ggarrange is slightly superior in this regard. It might be easier to see if we switch away from the actual plot and look at the “bones”:\n\nlemme_see_dem_bones = function(plot){\n  bonegrob = egg::expose_layout(plot, draw = F)\n  boneplot = ggpubr::as_ggplot(bonegrob)\n  return(boneplot)\n}\n\n# Functions ggpubr::as_ggplot() ggplotify::as.ggplot()\n\nexpose_layout allows you to see how the different plot elements are being parsed by whatever package you’re using.\n\n\n\n\n\ngridExtra::grid.arrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\ngridExtra::grid.arrange(\n  lemme_see_dem_bones(p.temp.9am + no.x), \n  lemme_see_dem_bones(p.temp.3pm), \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggpubr::ggarrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\nggpubr::ggarrange(\n  lemme_see_dem_bones(p.temp.9am + no.x), \n  lemme_see_dem_bones(p.temp.3pm), \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\negg::ggarrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\neg = egg::ggarrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\nexpose_layout(eg)\n\n\n\n\nYou might have already noticed some problems with this approach. For one thing, it’s pretty finicky and a bit of a time-trap. You’re essentially manually removing bits of each plot to fit the image in your head, and before you know it you’ll have spent 6 hours trying to get a figure to look right. For another, the sub-figures above are actually slightly different sizes. The axes titles take up part of the plot area allotted to each sub-figure, so removing them causes the rest of the plot area to expand to fill it. Not ideal.\nEven worse, it’s standard practice to label subfigures within the plot area. grid.arrange is a little too simple function, but the two ggarrange functions (in egg and ggpubr) will do it for you pretty easily. However, they are not flexible about where those labels are placed within the plot area, and this is especially obvious when illustrating with a 4-panel figure:\n\n# WH = c(4, 3)\n\n# egg::ggarrange(\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.9am + no.x, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.9am + no.x + no.y, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.3pm, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.3pm + no.y, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   nrow = 2, ncol = 2, labels = c(\"A\", \"B\", \"C\", \"D\"))\n\negg::ggarrange(p.temp.9am + no.x, \n               p.temp.9am + no.x + no.y, \n               p.temp.3pm, \n               p.temp.3pm + no.y, \n               ncol = 2, nrow = 2,\n               widths = c(1, 1), heights = c(1, 1), \n               labels = c(\"A\", \"B\", \"C\", \"D\"),\n               label.args = list(gp = gpar(fontfamily = \"sans\", \n                                           fontsize = 12, fontface = \"bold\"), \n                                 x = unit(1.95, \"cm\"), vjust = 1, hjust = 1), \n               draw = T)\n\n\n\n\n\n\n\n\nEw.\n\ngtab = gtable_matrix(name = NULL,\n                     grobs = matrix(list(grob.1, grob.1), nrow = 1), \n                     widths = unit(c(1, 1), \"null\"), \n                     heights = unit(1, \"null\"))\n\ng1 = expose_layout(dummy.1) \n\ngtab = gtable_matrix(name = NULL, \n                     grobs = matrix(list(g1, g1), nrow = 1), \n                     widths = unit(c(1, 1), \"null\"), \n                     heights = unit(1, \"null\"))\n\ngrid.draw(gtab)",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example-blog-post.html#why",
    "href": "blog_posts/example-blog-post.html#why",
    "title": "Laying out figures with ggplot2",
    "section": "",
    "text": "Previously was using a combination of R, Powerpoint, and Latex to lay out figures.\nHowever, it was a very finicking process. If I’m going to be using Quarto/R for most things would be nice to do things all in one place.\nI really want to enable other students/academics to do things without reinventing the wheel.\n\n\nI like to use pacman (the package manager) because its function p_load acts like library() if the package is already installed and install.packages() if it isn’t. You can also pass all your package names to it as a single vector.\n\ninstall.packages(\"pacman\", repos=\"https://cran.r-project.org\", update = TRUE)\n\n# Basic plotting packages\npacman::p_load(\"ggplot2\", update = TRUE)\n\n# All the packages we need for laying out plots\npacman::p_load(\"grid\", \"gridExtra\", \"gtable\", \"cowplot\", \"multipanelfigure\", \"egg\", \"patchwork\", update = TRUE)\n\n# Extra stuff\npacman::p_load(\"ggpubr\", \"ggplotify\", \"tidyverse\", update = TRUE)\n\nSo these are the packages I want to compare. A lot of the inspiration for this work came from the egg vignettes (here and here), so make sure to check those out if you want further information.\n\n\n\nPackage\nVersion\nFunction(s)\nCompatible with ggsave()\nAlignment\n\n\n\n\nr cookbook (grid)\n4.3.0\nmultiplot\nno\nno\n\n\ngridExtra\n2.3\ngrid.arrange\nyes\nno\n\n\ngtable\n0.3.4\nmulti_panel_figure\nyes\nyes\n\n\ncowplot\n1.1.3\nplot_grid\nyes*\nyes*\n\n\nmultipanelfigure\n2.1.5\nmulti_panel_figure\nyes\nyes\n\n\negg\n0.4.5\nggarrange\nyes\nyes\n\n\npatchwork\n1.2.0\nplot_layout\nyes\nyes\n\n\n\n\n\n\nFirst I’m going to set up a dummy plot that will act as our tester going forward. I’m deliberately going to make it pretty complex to make sure I can demonstrate all the features we might want. I’ll be using data from the Bureau of Meteorology that I downloaded and cleaned up. The data I used is available here, and if you want to generate a similar dataset the code I used is here.\n\np.temp.9am = \n  ggplot(data = subset(weather.times, Time == \"Morning\"), \n         aes(x = Date, y = Temp.C, color = WindDir, shape = Time)) +\n  geom_point() + \n  scale_x_date(name = \"Month\", date_labels = \"%b\") +\n  theme_classic() + theme(legend.position = \"none\")\n\np.temp.3pm = \n  ggplot(data = subset(weather.times, Time == \"Morning\"), \n         aes(x = Date, y = Temp.C, color = WindDir, shape = Time)) +\n  geom_point() + \n  scale_x_date(name = \"Month\", date_labels = \"%b\") +\n  theme_classic() + theme(legend.position = \"none\")",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example-blog-post.html#basics",
    "href": "blog_posts/example-blog-post.html#basics",
    "title": "Laying out figures with ggplot2",
    "section": "",
    "text": "Laying two plots out, side by side, is easy with basically any of these packages. The most basic way is probably with the confusingly named custom function multiplot, which is built in base packages and defined in R Cookbook.\n\nmultiplot(p.temp.9am, p.temp.3pm, cols = 2)\n\n\n\n\n\n\n\n\nYou can also achieve the same thing with functions already built into the packages gridExtra, ggpubr and egg, which are built on top of the basic grid package:\n\n\n\n\n\ngridExtra::grid.arrange(\n  p.temp.9am, p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nggpubr::ggarrange(\n  p.temp.9am, p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\negg::ggarrange(\n  p.temp.9am, p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\nHowever, have a look at the figures above. Doesn’t it bother you that the axis titles, labels and tick-marks are repeated over multiple figures? It bothers me. It especially bothers me when I’m trying to squeeze a lot of information into one page. Repeated information isn’t just redundant, it’s actively detrimental to your audience’s understanding of your data. Personally, if I was going to plot those two figures together in a paper, I would remove their common axis (y if they’re side-by-side, x if they’re stacked).",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example-blog-post.html#adjustments-for-subfigures",
    "href": "blog_posts/example-blog-post.html#adjustments-for-subfigures",
    "title": "Laying out figures with ggplot2",
    "section": "",
    "text": "The simplest way to do achieve this is to remove the offending elements from the plots themselves. I like to do this with theme environment shortcuts, which take advantage of ggplot2’s modular structure and can make your code a lot less verbose. For example:\n\nno.x = theme(axis.title.x = element_blank(), axis.text.x = element_blank())\nno.y = theme(axis.title.y = element_blank(), axis.text.y = element_blank())\n\nYou can then plot your figures much more neatly, and you’ll get exactly the same results using gridExtra::grid.arrange and ggpubr::ggarrange. However, you’ll get a different result when you use egg::ggarrange, and in fact egg::ggarrange is slightly superior in this regard. It might be easier to see if we switch away from the actual plot and look at the “bones”:\n\nlemme_see_dem_bones = function(plot){\n  bonegrob = egg::expose_layout(plot, draw = F)\n  boneplot = ggpubr::as_ggplot(bonegrob)\n  return(boneplot)\n}\n\n# Functions ggpubr::as_ggplot() ggplotify::as.ggplot()\n\nexpose_layout allows you to see how the different plot elements are being parsed by whatever package you’re using.\n\n\n\n\n\ngridExtra::grid.arrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\ngridExtra::grid.arrange(\n  lemme_see_dem_bones(p.temp.9am + no.x), \n  lemme_see_dem_bones(p.temp.3pm), \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggpubr::ggarrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\nggpubr::ggarrange(\n  lemme_see_dem_bones(p.temp.9am + no.x), \n  lemme_see_dem_bones(p.temp.3pm), \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\negg::ggarrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\neg = egg::ggarrange(\n  p.temp.9am + no.x, \n  p.temp.3pm, \n  nrow = 2)\n\nexpose_layout(eg)\n\n\n\n\nYou might have already noticed some problems with this approach. For one thing, it’s pretty finicky and a bit of a time-trap. You’re essentially manually removing bits of each plot to fit the image in your head, and before you know it you’ll have spent 6 hours trying to get a figure to look right. For another, the sub-figures above are actually slightly different sizes. The axes titles take up part of the plot area allotted to each sub-figure, so removing them causes the rest of the plot area to expand to fill it. Not ideal.\nEven worse, it’s standard practice to label subfigures within the plot area. grid.arrange is a little too simple function, but the two ggarrange functions (in egg and ggpubr) will do it for you pretty easily. However, they are not flexible about where those labels are placed within the plot area, and this is especially obvious when illustrating with a 4-panel figure:\n\n# WH = c(4, 3)\n\n# egg::ggarrange(\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.9am + no.x, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.9am + no.x + no.y, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.3pm, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   ggplotify::as.ggplot(\n#     egg::set_panel_size(p.temp.3pm + no.y, width = unit(WH[1], \"in\"), height = unit(WH[2], \"in\"))\n#     ),\n#   nrow = 2, ncol = 2, labels = c(\"A\", \"B\", \"C\", \"D\"))\n\negg::ggarrange(p.temp.9am + no.x, \n               p.temp.9am + no.x + no.y, \n               p.temp.3pm, \n               p.temp.3pm + no.y, \n               ncol = 2, nrow = 2,\n               widths = c(1, 1), heights = c(1, 1), \n               labels = c(\"A\", \"B\", \"C\", \"D\"),\n               label.args = list(gp = gpar(fontfamily = \"sans\", \n                                           fontsize = 12, fontface = \"bold\"), \n                                 x = unit(1.95, \"cm\"), vjust = 1, hjust = 1), \n               draw = T)\n\n\n\n\n\n\n\n\nEw.\n\ngtab = gtable_matrix(name = NULL,\n                     grobs = matrix(list(grob.1, grob.1), nrow = 1), \n                     widths = unit(c(1, 1), \"null\"), \n                     heights = unit(1, \"null\"))\n\ng1 = expose_layout(dummy.1) \n\ngtab = gtable_matrix(name = NULL, \n                     grobs = matrix(list(g1, g1), nrow = 1), \n                     widths = unit(c(1, 1), \"null\"), \n                     heights = unit(1, \"null\"))\n\ngrid.draw(gtab)",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example-blog-post.html#create-ggplot-from-grob",
    "href": "blog_posts/example-blog-post.html#create-ggplot-from-grob",
    "title": "Laying out figures with ggplot2",
    "section": "Create ggplot from grob",
    "text": "Create ggplot from grob\n\nggplotify::as.ggplot(g1)\n\negg::ggarrange(ggplotify::as.ggplot(g1), ggplotify::as.ggplot(g1), nrow = 1)",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example-blog-post.html#the-egg-package",
    "href": "blog_posts/example-blog-post.html#the-egg-package",
    "title": "Laying out figures with ggplot2",
    "section": "The egg package",
    "text": "The egg package\n\n# https://cran.r-project.org/web/packages/egg/vignettes/Ecosystem.html\n\nlayout_matrix = rbind(c(1, 2, 3), c(1, 4, 4))\n\negg::ggarrange(ggplot(), ggplot(), ggplot(), ggplot(), \n               # ncol = 3, nrow = 2, \n               widths = c(1, 1, 1, 2), heights = c(2, 1, 1, 1), \n               labels = c(\"A\", \"B\", \"C\", \"D\"),\n               label.args = list(gp = gpar(fontfamily = \"sans\", \n                                           fontsize = 12, fontface = \"bold\"), \n                                 x = unit(1.95, \"cm\"), vjust = 1, hjust = 1), \n               draw = T)\n\ng1 = gtable_frame(ggplotGrob(ggplot()), width = unit(1, \"null\"), height = unit(2, \"null\"), debug = TRUE)\ng2 = gtable_frame(ggplotGrob(ggplot()), width = unit(1, \"null\"), height = unit(1, \"null\"), debug = TRUE)\ng3 = gtable_frame(ggplotGrob(ggplot()), width = unit(1, \"null\"), height = unit(1, \"null\"), debug = TRUE)\ng4 = gtable_frame(ggplotGrob(ggplot()), width = unit(2, \"null\"), height = unit(1, \"null\"), debug = TRUE)\n\ng23 = gtable_frame(gtable_cbind(gtable_frame(ggplotGrob(ggplot())), \n                                gtable_frame(ggplotGrob(ggplot()))), \n                   width = unit(2, \"null\"), height = unit(1, \"null\"))\ng234 = gtable_frame(gtable_rbind(g23, \n                                 gtable_frame(ggplotGrob(ggplot()))), \n                    width = unit(2, \"null\"), height = unit(2, \"null\"))\ngcomb = gtable_frame(gtable_cbind(gtable_frame(ggplotGrob(ggplot())),\n                                  g234),\n                     width = unit(3, \"null\"), height = unit(2, \"null\"))\n\ngrid.newpage()\ngrid.draw(gcomb)",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example.html",
    "href": "blog_posts/example.html",
    "title": "Laying out figures with ggplot2",
    "section": "",
    "text": "Previously was using a combination of R, Powerpoint, and Latex to lay out figures.\nHowever, it was a very finicking process. If I’m going to be using Quarto/R for most things would be nice to do things all in one place.\nI really want to enable other students/academics to do things without reinventing the wheel.\n\nI like to use pacman (the package manager) because its function p_load acts like library() if the package is already installed and install.packages() if it isn’t. You can also pass all your package names to it as a single vector.",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "blog_posts/example.html#why",
    "href": "blog_posts/example.html#why",
    "title": "Laying out figures with ggplot2",
    "section": "",
    "text": "Previously was using a combination of R, Powerpoint, and Latex to lay out figures.\nHowever, it was a very finicking process. If I’m going to be using Quarto/R for most things would be nice to do things all in one place.\nI really want to enable other students/academics to do things without reinventing the wheel.\n\nI like to use pacman (the package manager) because its function p_load acts like library() if the package is already installed and install.packages() if it isn’t. You can also pass all your package names to it as a single vector.",
    "crumbs": [
      "About",
      "Blog Posts",
      "Laying out figures with ggplot2"
    ]
  },
  {
    "objectID": "footer.html",
    "href": "footer.html",
    "title": "Testing testing",
    "section": "",
    "text": "Testing testing\nTesting",
    "crumbs": [
      "About",
      "Testing testing"
    ]
  },
  {
    "objectID": "pages/about.html#career-goals",
    "href": "pages/about.html#career-goals",
    "title": "About Me",
    "section": "Career goals",
    "text": "Career goals",
    "crumbs": [
      "About",
      "Pages",
      "About Me"
    ]
  },
  {
    "objectID": "pages/about.html#follow-me",
    "href": "pages/about.html#follow-me",
    "title": "About Me",
    "section": "Follow me",
    "text": "Follow me",
    "crumbs": [
      "About",
      "Pages",
      "About Me"
    ]
  },
  {
    "objectID": "pages/blog.html#section",
    "href": "pages/blog.html#section",
    "title": "Blog",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Blog"
    ]
  },
  {
    "objectID": "pages/contact.html#section",
    "href": "pages/contact.html#section",
    "title": "Contact",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Contact"
    ]
  },
  {
    "objectID": "pages/example-page.html",
    "href": "pages/example-page.html",
    "title": "Example page (H1)",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla dignissim ex sit amet augue consequat, vel gravida purus ullamcorper. Etiam interdum metus in tincidunt elementum. Praesent placerat elit at eleifend eleifend. Vivamus consequat tempus sollicitudin. Pellentesque condimentum libero vel finibus pretium.",
    "crumbs": [
      "About",
      "Pages",
      "Example page (H1)"
    ]
  },
  {
    "objectID": "pages/example-page.html#a-grid-layout-h2",
    "href": "pages/example-page.html#a-grid-layout-h2",
    "title": "Example page (H1)",
    "section": "A grid layout (H2)",
    "text": "A grid layout (H2)\n\n\n\n\n\nFirst grid row (H3)\nUt eget lorem et odio facilisis placerat. Nam ac est elementum, ornare enim sit amet, aliquam magna. Morbi varius neque ante, non tristique velit pulvinar at. Praesent sit amet velit metus.\nUt vel metus quis ligula convallis sollicitudin. Etiam dapibus rhoncus nibh eget ullamcorper. Morbi enim ligula, aliquet vel libero et, egestas commodo nunc.\n\n\n\n\nSecond grid row (H3)\nAliquam condimentum aliquet sem, id vestibulum ante faucibus eu. Fusce vestibulum tellus ac luctus feugiat. Fusce semper venenatis dui, in porta urna cursus sit amet.\nEtiam efficitur interdum enim id pretium. In elit diam, iaculis a elit vel, sollicitudin ultricies magna. Etiam efficitur interdum enim id pretium. In elit diam, iaculis a elit vel, sollicitudin ultricies magna.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a ‘note’ callout block.",
    "crumbs": [
      "About",
      "Pages",
      "Example page (H1)"
    ]
  },
  {
    "objectID": "pages/example-page.html#code-and-links-h2",
    "href": "pages/example-page.html#code-and-links-h2",
    "title": "Example page (H1)",
    "section": "Code and links (H2)",
    "text": "Code and links (H2)\nCode and link appearance inline: ggplot() and geom_point() require package ggplot2, which is available from CRAN.\n\nlibrary(ggplot2)\nggplot(iris, aes(x = Sepal.Length, Sepal.Width, colour = as.factor(Species))) +\n    geom_point() +\n    theme_classic() +\n    theme(legend.position = \"none\")",
    "crumbs": [
      "About",
      "Pages",
      "Example page (H1)"
    ]
  },
  {
    "objectID": "pages/example-page.html#different-formatting-h2",
    "href": "pages/example-page.html#different-formatting-h2",
    "title": "Example page (H1)",
    "section": "Different formatting (H2)",
    "text": "Different formatting (H2)\n\nLists (H3)\n\nIs this an ordered list?\nWho knows, honestly\nI think so!\n\n\n\nMore formatting (H4)\nThis is italics, and this is bold.\n\nWould I even use this (H5)\nProbably not.",
    "crumbs": [
      "About",
      "Pages",
      "Example page (H1)"
    ]
  },
  {
    "objectID": "pages/example-page.html#columns-and-screens-h2",
    "href": "pages/example-page.html#columns-and-screens-h2",
    "title": "Example page (H1)",
    "section": "Columns and screens (H2)",
    "text": "Columns and screens (H2)\n\n\nColumn-body (default)\n\n\n\n\nColumn-body-outset\n\n\n\n\nColumn-body-inset\n\n\n\n\nColumn-page\n\n\n\n\nColumn-page-outset\n\n\n\n\nColumn-page\n\n\n\n\nColumn-screen\n\n\n\n\nColumn-screen-outset\n\n\n\n\nColumn-screen-inset",
    "crumbs": [
      "About",
      "Pages",
      "Example page (H1)"
    ]
  },
  {
    "objectID": "pages/interests.html#section",
    "href": "pages/interests.html#section",
    "title": "Interests",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Interests"
    ]
  },
  {
    "objectID": "pages/phd-research.html#section",
    "href": "pages/phd-research.html#section",
    "title": "PhD Research",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "PhD Research"
    ]
  },
  {
    "objectID": "pages/publications.html#peer-reviewed-articles",
    "href": "pages/publications.html#peer-reviewed-articles",
    "title": "Publications",
    "section": "Peer-reviewed articles",
    "text": "Peer-reviewed articles\n\n\n\n\n\n\n\nHigh prevalence of vaterite in sagittal otoliths causes hearing impairment in farmed fish\nTormey Reimer, Tim Dempster, Fletcher Warren-Myers, Arne J. Jensen, Stephen E. Swearer\nScientific Reports, 2016\n\n\nThe rapid growth of aquaculture raises questions about the welfare status of mass-produced species. Sagittal otoliths are primary hearing structures in the inner ear of all teleost (bony) fishes and are normally composed of aragonite, though abnormal vaterite replacement is sometimes seen in the wild. We provide the first widespread evaluation of the prevalence of vaterite in otoliths, showing that farmed fish have levels of vaterite replacement over 10 times… Read more\n\n\n\n\n\n\n\nRapid growth causes abnormal vaterite formation in farmed fish otoliths\nTormey Reimer, Tim Dempster, Anna Wargelius, Per Gunnar Fjelldal, Tom Hansen, Kevin A. Glover, Monica F. Solberg, Stephen E. Swearer\nJournal of Evolutionary Biology, 2017\n\n\nSagittal otoliths are essential components of the sensory organs that enable all teleost fish to hear and maintain balance, and are primarily composed of calcium carbonate. A deformity, where aragonite (the normal crystal form) is replaced with vaterite, was first noted over 50 years ago but its underlying cause is unresolved. We evaluated the prevalence of vateritic otoliths from two captive rearing studies which suggested that fast growth, due to environmental… Read more",
    "crumbs": [
      "About",
      "Pages",
      "Publications"
    ]
  },
  {
    "objectID": "pages/skills.html#section",
    "href": "pages/skills.html#section",
    "title": "Skills",
    "section": "Section",
    "text": "Section",
    "crumbs": [
      "About",
      "Pages",
      "Skills"
    ]
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "Dr Tormey Reimer",
    "section": "",
    "text": "About"
  },
  {
    "objectID": "index.html#check-out-my-blog",
    "href": "index.html#check-out-my-blog",
    "title": "Dr Tormey Reimer",
    "section": "Check out my blog!",
    "text": "Check out my blog!\n\n\n\n\n\nTitle text title text title text\n\n\nSome quick example text to build on the card title and make up the bulk of the card’s content.\n\nRead more"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tormey E. Reimer",
    "section": "",
    "text": "# Dr Tormey Reimer {.hero-text-homepage}"
  }
]