---
title: 'Laying out figures with ggplot2'
date: '02-12-2024'
categories: ['Example', 'ggplot2']
description: 'This is a test post. In this post, I try out different functionalities in the hope of making a template.'
execute:
  # eval	# Evaluate the code chunk (if false, just shows the code in the output)
  # echo 	# Include the source code in output
  output: true # 	Include the results of executing the code in the output (true, false, or asis to indicate that the output is raw markdown and should not have any of Quartoâ€™s standard enclosing markdown)
  message: false
  warning: false # Include warnings in the output
  error: false # Include errors in the output (note that this implies that errors executing code will not halt processing of the document).
  # include: # Catch all for preventing any output (code or results) from being included (e.g. include: false suppresses all output from the code block).
  # code-overflow: wrap
editor_options: 
  chunk_output_type: inline
knitr:
  opts_chunk: 
    fig.align: "center"
    fig-width: 8
    fig-asp: 0.75
    code-overflow: wrap
toc: true
---

# Setup

## Why?

1.   Previously was using a combination of R, Powerpoint, and Latex to lay out figures.
2.   However, it was a very finicking process. If I'm going to be using Quarto/R for most things would be nice to do things all in one place.
3.   I really want to enable other students/academics to do things without reinventing the wheel.

I like to use `pacman` (the package manager) because its function `p_load` acts like `library()` if the package is already installed and `install.packages()` if it isn't. You can also pass all your package names to it as a single vector. 


